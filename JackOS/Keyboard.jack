// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyBoardAddress; 
    static int spaceCode;
    static int waitDuration;
    
    /** Initializes the keyboard. */
    function void init() {
        let keyBoardAddress = 24576;
        let spaceCode = 32;
        let waitDuration = 50;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(keyBoardAddress);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char detectedChar;

        while(Keyboard.keyPressed() = 0){
            do Sys.wait(waitDuration);
        }

        let detectedChar = Keyboard.keyPressed();

        while(~(Keyboard.keyPressed() = 0)){
            do Sys.wait(waitDuration);
        }

        if(detectedChar < 128){
            do Output.printChar(detectedChar);
        }

        return detectedChar;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String result;
        var char currentChar;

        do Output.printString(message);

        let result = String.new();

        while(~(Keyboard.readChar() = String.newLine())){
            let currentChar = Keyboard.readChar();

            if(currentChar = String.backSpace()){
                do Output.backSpace();
                do Output.printChar(spaceCode);
                do Output.backSpace();
            }
            else{
                do result.appendChar(currentChar);
            }

        }

        return result;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
            var string readString;

            let readString = Keyboard.readLine(message);

            return readString.intValue();
    }
}
